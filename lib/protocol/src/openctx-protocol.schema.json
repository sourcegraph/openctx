{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "openctx-protocol.schema.json#",
  "title": "Protocol",
  "description": "OpenCtx client/provider protocol",
  "allowComments": true,
  "oneOf": [
    {
      "$ref": "#/definitions/RequestMessage"
    },
    {
      "$ref": "#/definitions/ResponseMessage"
    },
    {
      "$ref": "#/definitions/ResponseError"
    },
    {
      "$ref": "#/definitions/ProviderSettings"
    },
    {
      "$ref": "#/definitions/MetaParams"
    },
    {
      "$ref": "#/definitions/MetaResult"
    },
    {
      "$ref": "#/definitions/Mention"
    },
    {
      "$ref": "#/definitions/MessageSelector"
    },
    {
      "$ref": "#/definitions/AnnotationSelector"
    },
    {
      "$ref": "#/definitions/MentionsParams"
    },
    {
      "$ref": "#/definitions/MentionsResult"
    },
    {
      "$ref": "#/definitions/ItemsParams"
    },
    {
      "$ref": "#/definitions/ItemsResult"
    },
    {
      "$ref": "#/definitions/AnnotationsParams"
    },
    {
      "$ref": "#/definitions/AnnotationsResult"
    }
  ],
  "definitions": {
    "RequestMessage": {
      "type": "object",
      "additionalProperties": false,
      "required": ["method"],
      "properties": {
        "method": {
          "type": "string"
        },
        "params": {
          "type": ["object", "array"],
          "tsType": "unknown"
        },
        "settings": {
          "$ref": "#/definitions/ProviderSettings"
        }
      }
    },
    "ProviderSettings": {
      "description": "User settings sent by the client to the provider.",
      "type": "object",
      "additionalProperties": true
    },
    "ResponseMessage": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "result": {
          "type": ["object", "array"],
          "tsType": "unknown"
        },
        "error": {
          "$ref": "#/definitions/ResponseError"
        }
      }
    },
    "ResponseError": {
      "type": "object",
      "additionalProperties": false,
      "required": ["code", "message"],
      "properties": {
        "code": {
          "type": "integer"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": ["object", "array"],
          "tsType": "unknown"
        }
      }
    },
    "MessageSelector": {
      "description": "List of regex patterns matching a message for which the provider can return context items.",
      "type": "object",
      "additionalProperties": false,
      "required": ["pattern"],
      "properties": {
        "pattern": {
          "description": "The regex pattern matching a message for which the provider can return context items",
          "type": "string"
        }
      }
    },
    "MetaParams": {
      "type": "object",
      "additionalProperties": false,
      "$comment": "(empty for now)",
      "properties": {},
      "tsType": "Record<string, never>"
    },
    "AnnotationSelector": {
      "description": "Defines a scope in which a provider is called.\n\nTo satisfy a selector, all of the selector's conditions must be met. For example, if both `path` and `content` are specified, the resource must satisfy both conditions.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "path": {
          "description": "A glob that must match the resource's hostname and path.\n\nUse `**/` before the glob to match in any parent directory. Use `/**` after the glob to match any resources under a directory. Leading slashes are stripped from the path before being matched against the glob.",
          "type": "string"
        },
        "contentContains": {
          "description": "A literal string that must be present in the resource's content.",
          "type": "string"
        }
      }
    },
    "MetaResult": {
      "type": "object",
      "additionalProperties": false,
      "required": ["name"],
      "properties": {
        "name": {
          "description": "The name of the provider.",
          "type": "string"
        },
        "items": {
          "description": "Configuration for providing context items.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "messageSelectors": {
              "description": "The list of regex patterns for matching with a message for which the provider can return context items",
              "type": "array",
              "items": {
                "$ref": "#/definitions/MessageSelector"
              },
              "tsType": "MessageSelector[]"
            }
          }
        },
        "mentions": {
          "description": "Configuration for the mentions feature.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "label": {
              "description": "The label that is shown when a user wants to query mentions. For example `Search...` or `Paste Linear URL`.",
              "type": "string"
            },
            "autoInclude": {
              "description": "Whether to automatically include the returned mention items as initial context for new messages.",
              "type": "boolean"
            }
          }
        },
        "annotations": {
          "description": "Configuration for the annotations feature.",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "selectors": {
              "description": "A list of patterns matching the mention text for which the provider can return mentions",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AnnotationSelector"
              },
              "tsType": "AnnotationSelector[]"
            }
          }
        }
      }
    },
    "ItemsParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [],
      "properties": {
        "message": {
          "description": "A message that is interpreted by providers to return relevant items.",
          "type": "string"
        },
        "mention": {
          "type": "object",
          "description": "A mention interpreted by providers to return items for the specified mention.",
          "tsType": "Mention"
        }
      }
    },
    "ItemsResult": {
      "type": "array",
      "items": {
        "$ref": "../../schema/src/openctx.schema.json#/definitions/Item"
      },
      "tsType": "Item[]"
    },
    "Mention": {
      "description": "A mention contains presentation information relevant to a resource.",
      "type": "object",
      "additionalProperties": false,
      "required": ["title", "uri"],
      "properties": {
        "title": {
          "description": "A descriptive title.",
          "type": "string"
        },
        "description": {
          "description": "An item description.",
          "type": "string"
        },
        "uri": {
          "description": "A URI for the mention item.",
          "type": "string",
          "format": "uri"
        },
        "data": {
          "type": "object",
          "additionalProperties": true,
          "required": []
        }
      }
    },
    "MentionsParams": {
      "type": "object",
      "additionalProperties": false,
      "required": [],
      "properties": {
        "query": {
          "description": "A search query that is interpreted by providers to filter the items in the result set.",
          "type": "string"
        },
        "uri": {
          "description": "URI of the active document.",
          "type": "string"
        },
        "codebase": {
          "description": "Name of the active codebase infered from .git.",
          "type": "string"
        }
      }
    },
    "MentionsResult": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Mention"
      },
      "tsType": "Mention[]"
    },
    "AnnotationsParams": {
      "type": "object",
      "additionalProperties": false,
      "required": ["uri", "content"],
      "properties": {
        "uri": {
          "description": "The resource's URI.",
          "type": "string",
          "format": "uri"
        },
        "content": {
          "description": "The resource's content.",
          "type": "string"
        }
      }
    },
    "AnnotationsResult": {
      "type": "array",
      "items": {
        "$ref": "../../schema/src/openctx.schema.json#/definitions/Annotation"
      },
      "tsType": "Annotation[]"
    }
  }
}
